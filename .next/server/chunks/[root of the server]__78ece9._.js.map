{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/api/signed-url/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\nexport async function GET(request: Request) {\n    const { searchParams } = new URL(request.url);\n    const agentId = searchParams.get(\"agentId\");\n    const apiKey = process.env.NEXT_PUBLIC_XI_API_KEY;\n\n    if (!agentId) {\n        return NextResponse.json({ error: \"Agent ID is required\" }, { status: 400 });\n    }\n    if (!apiKey) {\n        return NextResponse.json({ error: \"XI_API_KEY is not set\" }, { status: 500 });\n    }\n\n    try {\n        const response = await fetch(\n            `https://api.elevenlabs.io/v1/convai/conversation/get_signed_url?agent_id=${agentId}`,\n            {\n                method: \"GET\",\n                headers: {\n                    \"xi-api-key\": apiKey,\n                },\n            }\n        );\n\n        if (!response.ok) {\n            throw new Error(\"Failed to get signed URL\");\n        }\n\n        const data = await response.json();\n        return NextResponse.json({ signedUrl: data.signed_url });\n    } catch (error) {\n        console.error(\"Error:\", error);\n        return NextResponse.json({ error: \"Failed to get signed URL\" }, { status: 500 });\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IAAI,OAAgB;IACtC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,UAAU,aAAa,GAAG,CAAC;IACjC,MAAM;IAEN,IAAI,CAAC,SAAS;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E;IACA,uCAAa;;IAEb;IAEA,IAAI;QACA,MAAM,WAAW,MAAM,MACnB,CAAC,yEAAyE,EAAE,SAAS,EACrF;YACI,QAAQ;YACR,SAAS;gBACL,cAAc;YAClB;QACJ;QAGJ,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,WAAW,KAAK,UAAU;QAAC;IAC1D,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,UAAU;QACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAClF;AACJ"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}